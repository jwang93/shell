
GamePlan 

Task 1: 
	need to build functionality for jobs, bg, fg, cd 
	4 helper functions: do_jobs, do_bg, do_fg, do_cd
	
	do_fg --> code is online
	do_jobs --> basically printfs? 
		work with the fields in process struct, esp completed, stopped
	do_bg --> code online

	

in the job, there is a process field 
	we look at the process field and we loop through
		we have a p->argv
		p->argv could be ls, jobs, fg, cd, wc 
		we start out looking at p->argv[0] 
			if p->argv[0] == jobs or fg or bg or cd, then we have a built in command and we will handle that internally
				*note, there will be no argv[1], [2]
			if p->argv[0] != jobs/fg/bg/cd, then we need to do the spawn_job, exec, fork
				*note, we need to keep going through the rest of the argv because there could be more 
	
when a j->pgid = -1, there is a job awaiting for you that hasn't been processed
	this becomes useful when you loop to check it jobs need to be done



Things which  may be tricky: 

	I/O redirection: 
	Pipeline: you know you have a pipeline when argv[1] exists
		you take the output from argv[0] and put it into stdin for argv[1]



Functions Added:
mark_process_status
wait_for_job 
